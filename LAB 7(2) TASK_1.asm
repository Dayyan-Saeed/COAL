.MODEL SMALL

.DATA

MATRIX1 DW 01H,01H,01H,01H
        DW 02H,02H,02H,02H
        DW 03H,03H,03H,03H
        
MATRIX2 DW 04H,04H,04H,04H
        DW 05H,05H,05H,05H
        DW 06H,06H,06H,06H
        DW 07H,07H,07H,07H

MATRIX3 DW 00H,00H,00H,00H
        DW 00H,00H,00H,00H
        DW 00H,00H,00H,00H

.CODE

MOV AX,@DATA
MOV DS,AX

MOV SI,0000H ;USING THIS INDEX FOR MATRIX 1
MOV DI,0000H ;USING THIS INDEX FOR MATRIX 2
MOV BP,0000H ;USING THIS INDEX FOR RESULTANT MATRIX

MOV CL,3H ;THIS 8-BIT REGISTER WILL SAVE THE VALUE OF ROWS
MOV CH,4H ;THIS 8-BIT REGISTER WILL SAVE THE VALUE OF COLUMNS

JUMP3:
MOV BL,4 ;USING THIS AS A COMPARING VARIABLE SO WHEN THE TOTAL ROW ELEMENTS MULTIPLIES WITH THE TOTAL COLUMN ELEMENTS IT WILL SET ZERO FLAG TO 1
JUMP2:
MOV CH,4 ;USING THIS ALSO AS A COMPARING ELEMENTS FOR COLUMN ELEMENTS CHECKING 
JUMP1:
MOV AX,MATRIX1[SI] ;MOVING THE ELEMENT OF MATRIX 1 INTO AX
MUL MATRIX2[DI]    ;MULTUPLYING BOTH ELEMENTS OF MATRIX 1 AND MATRIX 2 
ADC MATRIX3[BP],AX ;MOVING THE RESULT INTO MATRIX 3
ADD SI,2           ;INCREMENTING SI BY 2 TO GO TO THE NEXT ELEMENT
ADD DI,8           ;INCREMENTING DI BY 8 SO IT WILL GO TO THE NEXT ELEMENT BELOW PREVIOUS ELEMENT
DEC CH             ;AFTER MULTIPLYING BOTH ELEMENT I'M DECREMENTING CH
JNZ JUMP1
ADD BP,2           ;POINTING BP TO THE NEXT ELEMENT TO STORE NEXT RESULT
SUB SI,8H          ;SUBTRACTING 8 SO IT WILL GO TO BACK TO THE BASE ELEMENT
SUB DI,20H         ;//////////////////////////////////////////////////////
ADD DI,2           
DEC BL             
JNZ JUMP2
ADD SI,8H          ;AFTER FIRST ROW MULTIPLICATION NOW SI WILL POINT TO THE NEXT ROW FIRST ELEMENT
MOV DI,0000H
DEC CL
JNZ JUMP3
HLT


.EXIT